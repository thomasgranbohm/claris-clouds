@use "styles/functions";
@use "styles/mixins";

.container {
	margin-top: functions.gutter(2);
}

.artwork-display {
	.artwork {
		.link {
			.image-container {
				border-radius: functions.gutter(0.25);
				aspect-ratio: 16 / 9;
				transition: 0.1s box-shadow;
				box-shadow: 0px 2px 4px 0px rgba(0 0 0 / 25%);
				position: relative;
			}

			.title {
				margin: functions.gutter(0.5) 0;
			}

			@include mixins.has-general-focus {
				.image {
					box-shadow: 0px 2rem 2rem 0px rgba(0 0 0 / 25%);
				}

				.title {
					text-decoration: underline;
				}
			}
		}
	}
}

.call-to-action {
	&.align--left {
		flex-direction: row;
	}

	&.align--right {
		flex-direction: row-reverse;
	}

	.link {
		width: 50%;
	}
}

.showcase {
	margin-left: calc((100vw - 100%) / -2);
	margin-right: calc((100vw - 100%) / -2);
	padding-left: calc((100vw - 100%) / 2);
	padding-right: calc((100vw - 100%) / 2);

	overflow: hidden;

	.swiper {
		overflow: visible;

		.slide {
			/*
				Welcome back!
				The solution you want is for the largest image to scale to 100% width and then have auto height
				and every other picture should follow that height and contain the ratio
			*/

			// TODO: May create problems in the future
			width: unset;
			height: 9rem;
			max-width: 100%;
			@include mixins.keep-within-width;

			@include mixins.breakpoint(md) {
				height: 18rem;
			}

			@include mixins.breakpoint(lg) {
				height: 27rem;
			}
		}
	}
}

.rich-text .text,
.text-with-picture .text {
	& > :first-child {
		margin-top: 0;
	}
}

.text-with-picture {
	&.align--left {
		flex-direction: row;
	}

	&.align--right {
		flex-direction: row-reverse;
	}

	.image {
		position: sticky;
		top: 7rem;
	}
}
